#!/usr/bin/env node
import e from"chalk";import o from"figlet";import t from"inquirer";import s from"fs";const a=process.cwd().replace("\\","/"),n=[{name:"template",type:"list",message:"Seleccionar plantilla: ",choices:["ReactJS"]},{name:"router",type:"list",message:"Crear router: ",choices:["true","false"],default:"true"},{name:"hooks_helpers",type:"list",message:"Crear hooks y helpers: ",choices:["true","false"],default:"true"},{name:"components",type:"input",message:"Escriba los componentes separados por coma (Header, Footer): ",default:"Header, Banner, Footer, Loader, Modals"},{name:"ext",type:"list",message:"Selecionar extension de componentes:",choices:[".js",".jsx"],default:".js"},{name:"extcss",type:"list",message:"Selecionar extension de archivos de estilos:",choices:[".css",".scss"],default:".css"}],r="export default function [component]() {\n    return (\n        <div>[component]</div>\n    )\n}",c=console.log,i=e=>new Promise((o,t)=>{s.existsSync(e)?o():s.mkdir(e,"0777",e=>{e?t(e):o()})}),l=(e,o="",t="")=>new Promise((a,n)=>{".scss"===t&&s.existsSync(e)?s.appendFile(e,o,e=>{e?n(e):a()}):s.writeFile(e,o,e=>{e?n(e):a()})}),p=async(o,t,s)=>{const n=o.trim(),p=`${a}/src/components/`,m=`${p}${n}`,d=`${m}/${n}${t}`;await i(p),c(e.cyan(n+" ✔️"));const u=`${a}/src/styles/`;await i(u),await i(m);let w="",$="",y="";if(".scss"===s){const e=`${u}/components/`;w=`${e}/_${n.toLowerCase()}${s}`;const o=u+"styles.scss";await i(e),await l(w),$+=`@import "./components/${n.toLowerCase()}";\n`,await l(o,$,s),y=r.replace("[component]",n).replace("[component]",n)}else{w=`${u}/${n.toLowerCase()}${s}`;const e=`${u}${n.toLowerCase()}${s}`;await l(e),await l(w),y=`import "../../styles/${n.toLowerCase()}${s}";\n\n${r.replace("[component]",n).replace("[component]",n)}`}await l(d,y)},m={ReactJS:async o=>{const t=o.ext,s=o.extcss,n=o.router,r=o.hooks_helpers;c(e.green("Verificando SRC"));let m=`${a}/src/`;await i(m);const d=o.components.split(",");c(e.green("Creando componentes: "+d)),c(e.green("Creando estilos con: "+s));for(const o of d)try{await p(o,t,s)}catch(t){c.error(t),c(e.green(o+" ❌"))}return"true"===n&&(c(e.green("Creando router")),await(async e=>{const o=`${a}/src/router/`,t=`${a}/src/router/index${e}`;await i(o),await l(t,"export default function Router() {\n    return (\n        <div>Router</div>\n    )\n}")})(t)),"true"===r&&(c(e.green("Creando hooks y helpers")),await(async e=>{const o=`${a}/src/hooks/`,t=`${a}/src/hooks/index${e}`,s=`${a}/src/helpers/`,n=`${a}/src/helpers/index-helpers${e}`;await i(o),await l(t),await i(s),await l(n)})(t)),!0}};(async()=>{console.log(e.bold.cyan(o.textSync("@AVCODEV",{font:"ANSI Shadow",horizontalLayout:"default",verticalLayout:"default"})));const s=await t.prompt(n);await(async o=>{const t=m[o.template];if(t)try{await t(o)?console.log(e.green("Todos los componentes fueron creados con éxito!")):console.log(e.yellow("Algo salió mal durante la creación de componentes."))}catch(o){console.log(e.red("Error al crear el proyecto:",o))}else console.log(e.red("No se encontró una función para la plantilla seleccionada."))})(s)})();
//# sourceMappingURL=index.js.map
